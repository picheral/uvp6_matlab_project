function [fitresult, gof] = fit_power(X, Y, poids)
%fit_power(X,Y,POIDS)
%  Create a fit.
%
%  Data for 'fit_power' fit:
%      X Input: X
%      Y Output: Y
%      Weights: poids
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 29-Apr-2022 09:41:28

%% Fit 

% si pas de vecteur poids donné, la boucle suivante le met par défaut à un
if nargin <3
    poids = ones(length(Y),1);
end

[xData, yData, weights] = prepareCurveData( X, Y, poids );

% Set up fittype and options.
ft = fittype( 'power1' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Robust = 'LAR';
opts.StartPoint = [0.0556302918341509 0.665659567483676];
opts.Weights = weights;

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

%Plot fit with data.
% figure( 'Name', 'Courbe de calibrage' );
% h = plot( fitresult, xData, yData, 'predobs' );
% legend( h, 'area bino vs. area UVP with weight',  'UVP size calibration', 'Low bounds ', 'Upper bounds ', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'X - area UVP (px)', 'Interpreter', 'none' );
% ylabel( 'Y - area bino (mm2)', 'Interpreter', 'none' );
% grid on
% 
